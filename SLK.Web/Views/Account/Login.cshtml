@using SLK.Web.Models
@model LoginViewModel
@{
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
    ViewBag.Title = "Log in";
}

    <!-- BEGIN LOGIN FORM -->
    @{ 
        var wrongCredentialsError = ViewContext.ViewData.ModelState.FirstOrDefault(e => e.Key == "WrongCredentials");
        var hasWrongCredentialsError = wrongCredentialsError.Key != null;
    }
    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "login-form" }))
    {
        @Html.AntiForgeryToken()
        <h3 class="form-title font-green">Sign In</h3>
        <div class="alert alert-danger @(hasWrongCredentialsError ? "" : "display-hide") ">
            <button class="close" data-close="alert"></button>
            <span>  @(hasWrongCredentialsError ? wrongCredentialsError.Value.Errors.First().ErrorMessage : "Enter any username and password.")</span>
                
        </div>
        <div class="form-group">
            <!--ie8, ie9 does not support html5 placeholder, so we just show field title for that-->
            <label class="control-label visible-ie8 visible-ie9">Email</label>
            @*<input class="form-control form-control-solid placeholder-no-fix" type="text" autocomplete="off" placeholder="Username" name="username" />*@
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-solid placeholder-no-fix", autocomplete = "off", placeholder = "Email" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label class="control-label visible-ie8 visible-ie9">Password</label>
            @*<input class="form-control form-control-solid placeholder-no-fix" type="password" autocomplete="off" placeholder="Password" name="password" />*@
            @Html.PasswordFor(m => m.Password, new { @class = "form-control placeholder-no-fix form-control-solid", autocomplete = "off", placeholder = "Password" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
        <div class="form-actions">
            <button type="submit" class="btn green uppercase">Login</button>
            <label class="rememberme check mt-checkbox mt-checkbox-outline">
                @Html.CheckBoxFor(m => m.RememberMe, new { @class = "checkbox" }) Remember                  
                @*<input type="checkbox" name="remember" value="1" />Remember*@
                <span></span>
            </label>
            <a href="javascript:;" id="forget-password" class="forget-password">Forgot Password?</a>
        </div>            
        <div class="create-account">
            <p>
                <a href="@Url.Action("Register", "Account")" class="uppercase">Create an account</a>
            </p>
        </div>
    }
    <!-- END LOGIN FORM -->
    <!-- BEGIN FORGOT PASSWORD FORM -->
    <form class="forget-form" action="index.html" method="post">
        <h3 class="font-green">Forget Password ?</h3>
        <p> Enter your e-mail address below to reset your password. </p>
        <div class="form-group">
            <input class="form-control placeholder-no-fix" type="text" autocomplete="off" placeholder="Email" name="email" />
        </div>
        <div class="form-actions">
            <button type="button" id="back-btn" class="btn green btn-outline">Back</button>
            <button type="submit" class="btn btn-success uppercase pull-right">Submit</button>
        </div>
    </form>
    <!-- END FORGOT PASSWORD FORM -->       

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }



