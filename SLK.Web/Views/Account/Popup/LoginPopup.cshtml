@using SLK.Web.Models
@model LoginViewModel

@{
    var wrongCredentialsError = ViewContext.ViewData.ModelState.FirstOrDefault(e => e.Key == "WrongCredentials");
    var hasWrongCredentialsError = wrongCredentialsError.Key != null;
}

@using (Ajax.BeginForm("Login", "Account", null,
    new AjaxOptions { HttpMethod = "post", InsertionMode = InsertionMode.Replace, UpdateTargetId = "login-form", OnSuccess = "slk.login.reloadIfSuccess(data, status, xhr, 'login-form')" },
    new { @class = "login-form", id = "login-form" }))
{
    <button type="button" class="close login-close" data-dismiss="modal" aria-hidden="true"></button>
    <div class="modal-body">
        <h3 class="form-title font-green">Sign In</h3>

        @Html.AntiForgeryToken()
        <div class="alert alert-danger @(hasWrongCredentialsError ? "" : "display-hide") ">
            <button class="close" data-close="alert"></button>
            <span>  @(hasWrongCredentialsError ? wrongCredentialsError.Value.Errors.First().ErrorMessage : "Enter any username and password.")</span>

        </div>
        <div class="form-group">
            <!--ie8, ie9 does not support html5 placeholder, so we just show field title for that-->
            <label class="control-label visible-ie8 visible-ie9">Email</label>
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-solid placeholder-no-fix", autocomplete = "off", placeholder = "Email" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label class="control-label visible-ie8 visible-ie9">Password</label>
            @Html.PasswordFor(m => m.Password, new { @class = "form-control placeholder-no-fix form-control-solid", autocomplete = "off", placeholder = "Password" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>        
        <div class="form-actions">
            <button type="submit" class="btn green uppercase">Login</button>
            <label class="rememberme check mt-checkbox mt-checkbox-outline">
                @Html.CheckBoxFor(m => m.RememberMe, new { @class = "checkbox" }) Remember
                <span></span>
            </label>
            <a href="javascript:;" id="forget-password" class="forget-password">Forgot Password?</a>
        </div>
        @*<div class="create-account">
            <p>
                <a onclick="slk.login.reloadPopup(event || window.event, this)" data-target="#login" href="@Url.Action("Register", "Account")" class="uppercase">Create an account</a>
            </p>
        </div>*@
    </div>
}
