@using SLK.Web.Helpers
@model SLK.Web.Models.ListModel
    
<div class="portlet-body">    
    <div class="table-container">
        <table class="table table-striped table-bordered table-hover dataTable" id="datatable_ajax">
            <thead>
                <tr role="row">                    
                    @foreach (var prop in ViewData.ModelMetadata.Properties
                        .Where(p => p.ShowForEdit))
                    {
                        if (prop.TemplateHint != "HiddenInput")
                        {
                            if (prop.ModelType == typeof(bool))
                            {
                                <th class="sorting_disabled @prop.PropertyName" width="6%">
                                    @prop.DisplayName
                                </th>
                            }                            
                            else
                            {
                                <th class="sorting @prop.PropertyName" style="@(prop.ModelType == typeof(int) ? "width:140px;" : "")">
                                    @prop.DisplayName
                                </th>
                            }
                        }
                    }
                    <th width="10%" class="sorting_disabled"></th>
                </tr>
                <tr role="row" class="filter">
                    @foreach (var prop in ViewData.ModelMetadata.Properties.Where(p => p.ShowForEdit))
                    {
                        if (prop.TemplateHint != "HiddenInput")
                        {
                            if (prop.ModelType == typeof(bool))
                            {
                                <td>                                    
                                    <select name="@prop.PropertyName" class="form-control form-filter input-sm">                                        
                                        <option value="any">Any</option>
                                        <option value="true">True</option>
                                        <option value="false">False</option>                                        
                                    </select>
                                </td>
                            }
                            else if (prop.DisplayName.Contains("Date"))
                            {
                                var from = prop.PropertyName + "From"; var to = prop.PropertyName + "To";
                                <td rowspan="1" colspan="1">
                                    <div class="input-group date date-picker margin-bottom-5" data-date-format="dd/mm/yyyy">
                                        <input type="text" class="form-control form-filter input-sm" readonly="" name="@from"  placeholder="From">
                                        <span class="input-group-btn">
                                            <button class="btn btn-sm default" type="button">
                                                <i class="fa fa-calendar"></i>
                                            </button>
                                        </span>
                                    </div>
                                    <div class="input-group date date-picker" data-date-format="dd/mm/yyyy">
                                        <input type="text" class="form-control form-filter input-sm" readonly="" name="@to" placeholder="To">
                                        <span class="input-group-btn">
                                            <button class="btn btn-sm default" type="button">
                                                <i class="fa fa-calendar"></i>
                                            </button>
                                        </span>
                                    </div>
                                </td>
                            }
                            else
                            {
                                <td style="@(prop.ModelType == typeof(int) ? "width:140px;" : "")">
                                    <div class="input-icon">
                                        <i class="fa fa-search "></i>
                                        <input type="text" class="form-control form-filter" name="@prop.PropertyName">                                    
                                    </div>
                                </td>
                            }
                        }
                    }
                    <td></td>
                </tr>
            </thead>
            <tbody> </tbody>
        </table>
    </div>
    @if (Model.Editable && Model.Popup)
    {
        <div id="edit_entity_popup" class="modal modal-extended fade" tabindex="-1"></div>
     }
</div>



